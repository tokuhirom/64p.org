Concurrent DB Access with Perl
<div style="text-align: right">
2009-09-11(Fri) YAPC::Asia 2009
tokuhirom
</div>
----
Asynchronous++
----
*Problem
----
heavy multiple queries in one request...
----
then
----
<img src="assets/img/concurrent.png" />
----
Asynchronous++
----
how to work it?
----
- send request
- make socket as O_NONBLOCK
- polling socket...
- wait until socket become a readable
- process response
----
PostgreSQL
----
DBD::Pg can use asynchronouse request.
----
>||
use DBD::Pg 'async';
use AE;
||<
----
>||
my $dbh = DBI->connect('dbi:Pg:dbname=postgres;host=slave$_', 'postgres','',{AutoCommit=>0,RaiseError=>1});
$sth = $dbh->prepare($SQL, {pg_async => PG_ASYNC});  # ’¢« here
$sth->execute();
||<
----
>||
my $cv = AE::cv();
my $w = AE::io($dbh->{pg_socket}, 0,
   sub {
     if ($sth->pg_ready) {
       warn Dumper($sth->pg_result);
       $cv->send();
       undef $w;
     }
   }
);
push @cvs, $cv;
||<
----
>||
$_->recv for @cvs;
||<
----
*mysql
----
unfortunately...
----
libmysqlclient is not supported non-blocking I/O.
----
But
----
You can use libdrizzle
----
wtf?drizzle?drizzle is available?
----
Yes!
----
libdrizzle support drizzle/mysql protocol.
the project is separated from drizzle project :)
----
bindings
- Net::Drizzle
- DBD::drizzle
----
Net::Drizzle is
- my one
- straightforward interface for libdrizzle
----
This works well.but, this does not works on the DBI.
----
DBD::drizzle doesn't support concurrent queries
----
That's all
